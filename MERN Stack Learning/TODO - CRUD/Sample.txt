import React, { useEffect, useState } from "react";

const Todo = () => {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [todos, setTodos] = useState([]);
  const [error, setError] = useState("");
  const [message, setMessage] = useState("");

  const apiUrl = "http://localhost:8000";

  //Create Todo
  const handleSubmit = () => {
    setError("");
    if (title.trim() !== "" && description.trim() !== "") {
      fetch(`${apiUrl}/todos`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ title, description }),
      })
        .then((res) => {
          console.log(res.ok);
          if (!res.ok) {
            setError("Unable to create TODO");
          }
          return res.json();
        })
        .then(() => {
          setTodos([...todos, { title, description }]);
          setMessage("Item added successfully !!!");
          setTitle("");
          setDescription("");
          setTimeout(() => {
            setMessage("");
          }, 3000);
        })
        .catch(() => {
          setError("Server not create TODO");
        });
    } else {
      setError("Title and description cannot be empty");
    }
  };

  const getItems = () => {
    fetch(`${apiUrl}/todos`)
      .then((res) => res.json())
      .then((res) => {
        setTodos(res.todos);
        console.log(res);
      })
      .catch(() => {
        setError("Failed to fetch TODOs");
      });
  };
  console.log(todos);

  useEffect(() => {
    getItems();
  }, []);

  return (
    <>
      <div className="row p-3 bg-success text-light">
        <h1>TODO CRUD</h1>
      </div>

      {/*Create Todo*/}
      <div className="row">
        <h3>Add item</h3>
        {message && <p className="text-success">{message}</p>}
        <div className="form-group d-flex gap-2">
          <input
            type="text"
            className="form-control"
            placeholder="Enter title"
            onChange={(e) => setTitle(e.target.value)}
            value={title}
          />
          <input
            type="text"
            className="form-control"
            placeholder="Enter description"
            onChange={(e) => setDescription(e.target.value)}
            value={description}
          />
          <button className="btn btn-dark" onClick={handleSubmit}>
            Submit
          </button>
        </div>
        {error && <p className="text-danger">{error}</p>}
      </div>

      {/*List Todo*/}
      <div className="row mt-3">
        <h3>Tasks</h3>
        <ul className="list-group">
          {todos.map((todo, index) => (
            <li
              key={index}
              className="list-group-item d-flex justify-content-between align-items-center bg-bg-secondary my-2"
            >
              <div className="d-flex flex-column">
                <span className="fw-bold">{todo.title}</span>
                <span>{todo.description}</span>
              </div>
              <div className="d-flex gap-2">
                <button className="btn btn-warning">Edit</button>
                <button className="btn btn-danger">Delete</button>
              </div>
            </li>
          ))}
        </ul>
      </div>
    </>
  );
};

export default Todo;
